% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_ssm.R
\name{fit_ssm}
\alias{fit_ssm}
\title{Fit a Continuous-time Random Walk state-space filter to Argos data}
\usage{
fit_ssm(d, span = 0.1, min.dt = 0, min.dist = 100, pf = FALSE,
  ptime, ...)
}
\arguments{
\item{d}{a data frame of observations including Argos KF error ellipse info}

\item{span}{degree of loess smoothing (range: 0 - 1) to identify potential outliers in prefilter}

\item{min.dt}{minimum allowable time difference between observations; dt <= min.dt will be ignored by the SSM}

\item{min.dist}{minimum distance from track to define potential outlier locations in prefilter
##' @param ptime the regular time interval, in hours, to predict to. Alternatively, a vector of prediction times, possibly not regular, must be specified as a data.frame with id and POSIXt dates.}

\item{pf}{just pre-filter the data, do not fit the ctrw (default is FALSE)}

\item{...}{arguments passed to sfilter, described below:}

\item{fit.to.subset}{fit the SSM to the data subset determined by prefilter (default is TRUE)}

\item{psi}{estimate scaling parameter for the KF measurement error model error ellipses (0 = no psi, default; 1 = single psi for semi-minor axis)}

\item{optim}{numerical optimizer (nlminb or optim)}

\item{verbose}{report progress during minimization}

\item{f}{the span parameter for the loess fits used to estimate initial location states}
}
\value{
a list with components
\item{\code{call}}{the matched call}
\item{\code{predicted}}{a data.frame of predicted location states}
\item{\code{fitted}}{a data.frame of fitted locations}
\item{\code{par}}{model parameter summmary}
\item{\code{data}}{the input data.frame}
\item{\code{subset}}{the inpu subset vector}
\item{\code{mem}}{the measurement error model used}
\item{\code{opt}}{the object returned by the optimizer}
\item{\code{tmb}}{the TMB object}
\item{\code{rep}}{TMB sdreport}
\item{\code{aic}}{the calculated Akaike Information Criterion}
\item{\code{time}}{the processing time for sfilter}
}
\description{
fits a simple random walk in continuous time to filter Argos KF or LS data and predict
locations on a regular time step
}
\examples{
\dontrun{
require(dplyr)
data(ellie)
## fit KF measurement error model
fkf <- fit_ssm(ellie, min.dist = 150, ptime = 12, psi = 0)

## fit KFp measurement error model
fkfp <- fit_ssm(ellie, min.dist = 150, ptime = 12, psi = 1)

## fit LS measurement error model
fls <- fit_ssm(ellie[, 1:5], min.dist = 150, ptime = 12)
}
}
